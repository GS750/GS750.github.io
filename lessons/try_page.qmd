---
title: "TRY out page"
webr:  
  show-startup-message: true    # Display status of webR initialization
  packages: ['ggplot2'] # Pre-install dependency
---

## What is Causal Inference


```{webr-r}
#| context: setup
library(tidyverse)
```

<br>

## Question

Compute the difference in means between treated and control groups.

<!-- Stylish Reveal Button -->
<style>
.reveal-btn {
  background-color: #4CAF50; /* green */
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s, transform 0.2s;
}

.reveal-btn:hover {
  background-color: #45a049;  /* darker green on hover */
  transform: scale(1.05);     /* slight grow effect */
}

.reveal-btn:active {
  transform: scale(0.98);     /* shrink a little when clicked */
}
</style>

<button class="reveal-btn" onclick="document.getElementById('answer1').style.display='block'">
Reveal Correct Answer
</button>

<div id="answer1" style="display:none; margin-top:10px; padding:10px; border-left:4px solid #4CAF50; background:#f0fff0; border-radius:5px;">
üí° <strong>Answer:</strong> The difference in means is approximately <strong>2.1</strong> ‚Äî same as the regression coefficient on <code>z</code>.
</div>







## Instructions

Match each description on the left with the correct variable type on the right.  

- **Treatment** = variable that we manipulate  
- **Outcome** = variable we measure

| Description | Match |
|-------------|-------|
| 1. Did the student receive the new teaching method? | ‚ùì |
| 2. Test score after the intervention | ‚ùì |
| 3. Whether the patient got a medication | ‚ùì |
| 4. Blood pressure after treatment | ‚ùì |

<details>
<summary>Reveal Answers</summary>

| Description | Answer |
|-------------|-------|
| 1. Did the student receive the new teaching method? | Treatment |
| 2. Test score after the intervention | Outcome |
| 3. Whether the patient got a medication | Treatment |
| 4. Blood pressure after treatment | Outcome |

</details>


## Drag-and-Drop Matching: Treatment vs Outcome

<div class="drag-exercise" {=html}>
  <div style="display:flex; justify-content:space-between; width:600px; font-family:sans-serif;">
    <!-- Left column: draggable items -->
    <div id="left" style="width:45%;">
      <div draggable="true" id="item1" class="draggable">Student got new method</div>
      <div draggable="true" id="item2" class="draggable">Test score after intervention</div>
      <div draggable="true" id="item3" class="draggable">Patient received medication</div>
      <div draggable="true" id="item4" class="draggable">Blood pressure after treatment</div>
    </div>

    <!-- Right column: droppable boxes -->
    <div id="right" style="width:45%;">
      <div id="treatment" class="dropzone" ondrop="drop(event)" ondragover="allowDrop(event)">
        <strong>Treatment</strong>
      </div>
      <div id="outcome" class="dropzone" ondrop="drop(event)" ondragover="allowDrop(event)">
        <strong>Outcome</strong>
      </div>
    </div>
  </div>

  <!-- Buttons -->
  <div style="margin-top:10px;">
    <button onclick="checkAnswer()">Check Answers</button>
    <button onclick="resetBoxes()">Reset</button>
  </div>
  <div id="result" style="margin-top:10px; font-weight:bold;"></div>

  <style>
    .draggable {
      padding:8px;
      margin:6px;
      border:1px solid #444;
      border-radius:8px;
      background:#f9f9f9;
      box-shadow:2px 2px 4px rgba(0,0,0,0.1);
      cursor:grab;
      transition:background 0.2s;
    }
    .draggable:active {
      cursor:grabbing;
      background:#eef;
    }
    .dropzone {
      min-height:120px;
      border:2px dashed #999;
      border-radius:8px;
      padding:8px;
      margin-bottom:12px;
      display:flex;
      flex-direction:column;
      gap:6px;
      background:#fafafa;
    }
    #treatment { border-color:#007bff; }
    #outcome { border-color:#28a745; }
  </style>

  <script>
    function allowDrop(ev) {
      // Only allow drop if target is a dropzone (not another draggable)
      if (ev.target.classList.contains("dropzone")) {
        ev.preventDefault();
      }
    }

    function drag(ev) {
      ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
      ev.preventDefault();
      const itemId = ev.dataTransfer.getData("text");
      const target = ev.target;
      // Only allow dropping into dropzones, not inside other items
      if (target.classList.contains("dropzone")) {
        target.appendChild(document.getElementById(itemId));
      }
    }

    // Attach dragstart event
    document.querySelectorAll('.draggable').forEach(div => 
      div.addEventListener('dragstart', drag)
    );

    // Check answers
    function checkAnswer() {
      let correct = { "item1":"treatment", "item2":"outcome", "item3":"treatment", "item4":"outcome" };
      let score = 0;
      for (let item in correct) {
        let parentId = document.getElementById(item).parentElement.id;
        if (parentId === correct[item]) score++;
      }
      document.getElementById('result').innerText = `You got ${score} out of 4 correct!`;
    }

    // Reset boxes (return all items to left side)
    function resetBoxes() {
      const left = document.getElementById("left");
      document.querySelectorAll('.draggable').forEach(item => left.appendChild(item));
      document.getElementById('result').innerText = "";
    }
  </script>
</div>


## Matching Exercise: Treatment vs Outcome

<!-- Drag each variable to the correct box, then use the button below to calculate the effect of your treatment. -->

<!-- <div {=html} style="display:flex; justify-content:space-between; width:600px; margin-bottom:20px;"> -->
<!--   <div id="left" style="width:45%;"> -->
<!--     <div draggable="true" id="var1" style="padding:5px; margin:5px; border:1px solid black;">Student got new method</div> -->
<!--     <div draggable="true" id="var2" style="padding:5px; margin:5px; border:1px solid black;">Test score after intervention</div> -->
<!--   </div> -->
<!--   <div id="right" style="width:45%;"> -->
<!--     <div id="treatment" ondrop="drop(event)" ondragover="allowDrop(event)" style="height:120px; border:2px dashed blue; margin-bottom:10px; padding:5px;"> -->
<!--       <strong>Treatment</strong> -->
<!--     </div> -->
<!--     <div id="outcome" ondrop="drop(event)" ondragover="allowDrop(event)" style="height:120px; border:2px dashed green; padding:5px;"> -->
<!--       <strong>Outcome</strong> -->
<!--     </div> -->
<!--   </div> -->
<!-- </div> -->

<!-- <button onclick="computeEffect()">Compute Effect</button> -->
<!-- <div id="effectResult" style="margin-top:10px;"></div> -->

<!-- <script> -->
<!-- function allowDrop(ev) { ev.preventDefault(); } -->
<!-- function drag(ev) { ev.dataTransfer.setData("text", ev.target.id); } -->
<!-- function drop(ev) { ev.preventDefault(); ev.target.appendChild(document.getElementById(ev.dataTransfer.getData("text"))); } -->

<!-- // attach drag events -->
<!-- document.querySelectorAll('#left div').forEach(div => div.addEventListener('dragstart', drag)); -->

<!-- function computeEffect() { -->
<!--   // find which div is in treatment/outcome boxes -->
<!--   let treatment = document.getElementById("treatment").children[1]?.innerText || ""; -->
<!--   let outcome   = document.getElementById("outcome").children[1]?.innerText || ""; -->

<!--   if(treatment === "" || outcome === "") { -->
<!--     document.getElementById("effectResult").innerText = "Please drag one variable into each box!"; -->
<!--     return; -->
<!--   } -->

<!--   // Call webR to compute difference in means -->
<!--   const rCode = ` -->
<!-- df <- data.frame( -->
<!--   student = 1:20, -->
<!--   treatment = rbinom(20,1,0.5), -->
<!--   score = 5 + 2*treatment + rnorm(20) -->
<!-- ) -->
<!-- mean(df$score[df$treatment==1]) - mean(df$score[df$treatment==0]) -->
<!--   `; -->
<!--   webr.evalR(rCode).then(res => { -->
<!--     document.getElementById("effectResult").innerText = "Estimated effect (difference in means): " + res; -->
<!--   }); -->
<!-- } -->
<!-- </script> -->




